@use "variables" as v;

aside {
  // TODO: Add an animation and the functionality (optional)
  /* &::before {
    content: attr(data-year);
    position: absolute;
    top: -2.75rem;
    left: 3rem;
    translate: 0 100%;
    font-family: "Montserrat", sans-serif;
    font-size: 4rem;
    font-weight: bold;
    z-index: -1;
  } */
  width: v.$aside-width;
  height: v.$app-height;

  outline: v.$border;
  border-top-right-radius: v.$border-radius;
  border-bottom-right-radius: v.$border-radius;
  font-family: "Roboto Condensed", sans-serif;

  &.min {
    display: none;
    border-radius: v.$border-radius;
  }
}

.asides {
  height: 100%;
  background-color: lighten(v.$bg-color, 2);

  transition: all 1.375s cubic-bezier(0.65, 0.05, 0.36, 1);

  &::-webkit-scrollbar {
    display: none;
  }
}

.aside {
  background-color: lighten(v.$bg-color, 2);
  padding: 1.75rem 0 4.5rem;

  width: v.$aside-width;
  height: 100%;

  &::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    right: 0;
    height: 2rem;
    background-image: linear-gradient(to top, #fafafa, transparent);
  }

  &::-webkit-scrollbar {
    display: none;
  }

  h1,
  h2,
  h3 {
    font-weight: bold;
  }

  h1 {
    font-family: "Montserrat", sans-serif;
    font-size: 4rem;
    width: min-content;
    color: #5151de;

    &::after {
      content: url("/svg/link.svg");
      position: absolute;
      top: 50%;
      left: 100%;

      color: inherit;

      translate: calc(-50%) calc(-50% - 1rem);
      opacity: 0;
      scale: 1.5;
      transition: translate 0.25s ease-in, opacity 0.25s ease-in;
    }

    &:hover::after {
      opacity: 1;
      translate: calc(-50% + 1.375rem) calc(-50% - 1rem);
      transition: translate 0.25s ease-in-out, opacity 0.25s ease-in;
    }
  }
  h2 {
    padding-bottom: 0.5rem;
    font-size: 1.75rem;
  }

  & > .wrapper-s > h2 {
    margin-top: 3rem;
  }

  p {
    font-size: 1rem;
    line-height: 1.25;
  }
}

.wrapper-s {
  padding: 0 2rem 0 3.25rem;
}
.wrapper-m {
  padding: 0 3rem 0 5.25rem;
}

.info {
  width: 100%;
  height: 100%;
  background-color: #fafafa;
  padding: 1.5rem;
  margin: 1rem 0 3rem;
  border-radius: v.$border-radius;
  text-align: center;
  white-space: nowrap;

  p {
    line-height: 1.5;
    display: inline-block;
    &.animated {
      animation: p-prompter 25s linear infinite;
      animation-delay: 3s;
      transition: none;
    }
  }
}

.grid {
  margin: 2.75rem 0;

  column-gap: 0.5rem;
  row-gap: 0.5rem;

  &.col-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  &.col-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  &.no-col-4 {
    & .grid_tile:nth-child(4n) {
      opacity: 0.075;
      pointer-events: none;
    }
  }
  &:not(.no-col-4).off {
    opacity: 0.25;
    pointer-events: none;
  }

  & .grid_tile {
    aspect-ratio: 1;
    background-color: #eee;
    border-radius: v.$border-radius;

    display: flex;
    justify-content: center;
    align-items: center;

    user-select: none;

    &.col-3:nth-child(1)::after,
    &.col-3:nth-child(2)::after,
    &.col-3:nth-child(3)::after,
    &.col-4:nth-child(1)::after,
    &.col-4:nth-child(2)::after,
    &.col-4:nth-child(3)::after {
      content: attr(data-col-label);
      position: absolute;
      top: -1rem;
      left: 50%;
      text-align: center;

      translate: -50% -50%;
    }

    &.col-3:nth-child(3n + 1)::before,
    &.col-4:nth-child(4n + 1)::before {
      content: attr(data-row-label);
      position: absolute;
      top: 50%;
      left: -1.25rem;

      translate: -50% -50%;
    }

    &.col-4:nth-child(4)::after {
      content: attr(data-col-label);
      position: absolute;
      top: -1rem;
      left: 50%;
      text-align: center;

      translate: -50% -50%;
    }

    &:has(span.invalid) {
      cursor: not-allowed;
    }
    &:has(span.valid.et),
    &:has(span.valid.p) {
      background-color: #f5f5f5 !important;
    }

    span {
      display: block;
      font-size: 1.25rem;
      font-weight: 400;

      &.invalid {
        font-size: 0.9rem;
        opacity: 0.25;
      }

      &.invalid.et,
      &.invalid.p {
        opacity: 0.25;
        font-weight: 400;
      }

      &:not(.p):not(.et).valid::after {
        content: "(" attr(data-score) ")";
        position: absolute;
        left: 0.375rem;
        bottom: 0.375rem;

        font-size: 75%;
      }

      &.valid.et,
      &.valid.p {
        font-size: 1.25rem;
        font-weight: 400;
      }
    }
  }
}

footer {
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  right: 1rem;
  height: 4rem;

  outline: v.$border-alpha;
  border-radius: calc(#{v.$border-radius} * 0.5);
  font-family: "Montserrat", sans-serif;
  font-weight: bold;

  backdrop-filter: blur(0.5rem);

  .years {
    height: 100%;
    width: 100%;
    padding: 2rem 12.75rem 2rem 12.875rem;
    gap: 2.5rem; // jumps right to right most label

    &::-webkit-scrollbar {
      display: none;
    }

    .year {
      transition: scale 0.125s cubic-bezier(0.89, 0.58, 0.57, 1);
      background-color: transparent;

      &:hover,
      &:hover > label {
        cursor: pointer;
      }
      & > input {
        appearance: none;
      }
    }

    .year:has(input) {
      opacity: 0.5;
      font-weight: 600;
      &:hover {
        scale: 0.875;
        transition: scale 0.125s cubic-bezier(0, 0, 0.2, 1);
      }
    }

    .year:has(input:checked) {
      scale: 2.25;
      opacity: 1;
      font-weight: bold;
    }
  }
}
